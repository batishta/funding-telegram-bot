# src/handlers/messages.py
import html
import logging
from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

from ..services import funding_service, formatters
from ..user_manager import get_user_settings

logger = logging.getLogger(__name__)

async def ticker_message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–ª—è—î —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫ –∑–∞–ø–∏—Ç –Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–æ —Ç–∏–∫–µ—Ä—É."""
    ticker = update.message.text.strip().upper()
    chat_id = update.effective_chat.id
    settings = get_user_settings(chat_id)
    
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {chat_id} –∑–∞–ø–∏—Ç–∞–≤ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–æ —Ç–∏–∫–µ—Ä—É: {ticker}")
    
    if len(ticker) < 2:
        return

    processing_message = await update.message.reply_text(
        f"üîç –®—É–∫–∞—é –¥–∞–Ω—ñ –¥–ª—è <b>{html.escape(ticker)}</b>...", 
        parse_mode=ParseMode.HTML
    )
    
    try:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –°–ò–ù–•–†–û–ù–ù–£ —Ñ—É–Ω–∫—Ü—ñ—é –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
        df = await context.application.create_task(
            funding_service.get_funding_for_ticker_sync,
            (ticker, settings['exchanges'])
        )
        
        message_text = formatters.format_ticker_info(df, ticker)
        
        await processing_message.edit_text(
            text=message_text,
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=True
        )
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É —Ç–∏–∫–µ—Ä–∞ {ticker} –¥–ª—è {chat_id}: {e}", exc_info=True)
        await processing_message.edit_text(
            f"üòî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –¥–∞–Ω–∏—Ö –¥–ª—è <b>{html.escape(ticker)}</b>."
        )