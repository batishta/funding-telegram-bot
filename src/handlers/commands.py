# src/handlers/commands.py
import logging
import uuid
import asyncio
from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ParseMode
from queue import Empty

from ..services.formatters import format_funding_update
from ..keyboards import get_main_menu_keyboard
from ..user_manager import get_user_settings

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.effective_chat.id
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {chat_id} –∑–∞–ø—É—Å—Ç–∏–≤ /start.")

    settings = get_user_settings(chat_id)
    task_queue = context.bot_data['task_queue']
    result_queue = context.bot_data['result_queue']
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –¥–ª—è –Ω–∞—à–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    job_id = str(uuid.uuid4())
    
    await update.message.reply_text("–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —á–µ—Ä–≥—É...")
    
    # –ö–ª–∞–¥–µ–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —á–µ—Ä–≥—É –¥–ª—è –≤–æ—Ä–∫–µ—Ä–∞
    task_queue.put((job_id, settings['exchanges']))
    
    processing_message = await update.message.reply_text("–ó–∞–≤–¥–∞–Ω–Ω—è –≤ —á–µ—Ä–∑—ñ. –û—á—ñ–∫—É—é –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥ –≤–æ—Ä–∫–µ—Ä–∞...")
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —á–µ–∫–∞—î–º–æ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result_df = None
    start_time = time.time()
    while time.time() - start_time < 120: # –ß–µ–∫–∞—î–º–æ –¥–æ 2 —Ö–≤–∏–ª–∏–Ω
        try:
            # –ù–µ–±–ª–æ–∫—É—é—á–∏–π –∑–∞–ø–∏—Ç –¥–æ —á–µ—Ä–≥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
            job_result_id, df = result_queue.get_nowait()
            if job_result_id == job_id:
                result_df = df
                logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è #{job_id}")
                break # –í–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É, —è–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –Ω–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            else:
                # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —á—É–∂–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–∑–∞–¥ –≤ —á–µ—Ä–≥—É
                result_queue.put((job_result_id, df))
        except Empty:
            # –Ø–∫—â–æ —á–µ—Ä–≥–∞ –ø—É—Å—Ç–∞, —á–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏ —ñ –ø—Ä–æ–±—É—î–º–æ –∑–Ω–æ–≤—É
            await asyncio.sleep(1)
            
    if result_df is not None:
        message_text = format_funding_update(result_df, settings['threshold'])
        await processing_message.edit_text(
            text=message_text,
            parse_mode=ParseMode.HTML,
            reply_markup=get_main_menu_keyboard(),
            disable_web_page_preview=True
        )
    else:
        logger.error(f"–¢–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è #{job_id}")
        await processing_message.edit_text("üòî –í–æ—Ä–∫–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–≤ –≤—á–∞—Å–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")