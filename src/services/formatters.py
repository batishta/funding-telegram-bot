# src/services/formatters.py
import pandas as pd
import html
from ..config import EXCHANGE_URL_TEMPLATES

def get_trade_link(exchange: str, symbol: str) -> str:
    """–ì–µ–Ω–µ—Ä—É—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ç–æ—Ä–≥—ñ–≤–ª—ñ."""
    template = EXCHANGE_URL_TEMPLATES.get(exchange)
    if not template:
        return ""
    
    symbol_usdt = f"{symbol}USDT"
    symbol_hyphen = f"{symbol}-USDT"
    
    return template.format(symbol=symbol_usdt, symbol_hyphen=symbol_hyphen)

def format_funding_update(df: pd.DataFrame, threshold: float) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î –≥–æ–ª–æ–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–∞–Ω–¥—ñ–Ω–≥–æ–º."""
    if df.empty:
        return "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–∏—Ö –ø–æ —Ñ–∞–Ω–¥—ñ–Ω–≥—É –¥–ª—è –æ–±—Ä–∞–Ω–∏—Ö –±—ñ—Ä–∂."

    filtered_df = df[abs(df['rate']) >= threshold].sort_values(by='rate', ascending=False)

    if filtered_df.empty:
        return f"üü¢ –ù–µ–º–∞—î –º–æ–Ω–µ—Ç –∑ —Ñ–∞–Ω–¥—ñ–Ω–≥–æ–º –≤–∏—â–µ <b>{threshold}%</b> –∞–±–æ –Ω–∏–∂—á–µ <b>-{threshold}%</b>."

    header = f"<b>üíé –§–∞–Ω–¥—ñ–Ω–≥ –≤–∏—â–µ {threshold}%</b>\n\n"
    lines = []
    
    for _, row in filtered_df.iterrows():
        emoji = "üü¢" if row['rate'] > 0 else "üî¥"
        symbol = html.escape(row['symbol'])
        rate = row['rate']
        time_str = row['next_funding_time'].strftime('%H:%M UTC') if pd.notna(row['next_funding_time']) else "N/A"
        exchange_name = html.escape(row['exchange'])
        link = get_trade_link(row['exchange'], row['symbol'])
        
        exchange_part = f'<a href="{link}">{exchange_name}</a>' if link else exchange_name

        lines.append(f"{emoji} <code>{symbol:<8}</code>‚Äî <b>{rate: >-7.4f}%</b> ‚Äî {time_str} ‚Äî {exchange_part}")

    return header + "\n".join(lines)

def format_ticker_info(df: pd.DataFrame, ticker: str) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞."""
    if df.empty:
        return f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–∏—Ö –¥–ª—è <b>{html.escape(ticker)}</b> –Ω–∞ –æ–±—Ä–∞–Ω–∏—Ö –±—ñ—Ä–∂–∞—Ö."
    
    header = f"<b>ü™ô –§–∞–Ω–¥—ñ–Ω–≥ –¥–ª—è {html.escape(ticker.upper())}</b>\n\n"
    lines = []

    for _, row in df.iterrows():
        emoji = "üü¢" if row['rate'] > 0 else "üî¥"
        rate = row['rate']
        time_str = row['next_funding_time'].strftime('%H:%M UTC') if pd.notna(row['next_funding_time']) else "N/A"
        exchange_name = html.escape(row['exchange'])
        link = get_trade_link(row['exchange'], row['symbol'])
        
        exchange_part = f'<a href="{link}">{exchange_name}</a>' if link else exchange_name
        
        lines.append(f"{emoji} <b>{rate: >-7.4f}%</b> ‚Äî {time_str} ‚Äî {exchange_part}")
        
    return header + "\n".join(lines)